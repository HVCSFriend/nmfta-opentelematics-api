FORMAT: 1A

# NMFTA Fleet Resiliency - Open Telematics API DRAFT

![NMFTA Logo](https://raw.githubusercontent.com/nmfta-repo/nmfta-opentelematics-api/master/media/image1.png)

This document is written using [api-blueprint](https://apiblueprint.org/) and available online at both [opentelematicsapi.docs.apiary.io](https://opentelematicsapi.docs.apiary.io/#) (for browsable document) and https://github.com/nmfta-repo/nmfta-opentelematics-api for the API blueprint source. Please use https://github.com/nmfta-repo/nmfta-opentelematics-api to raise issues and suggest changes to the API.

If a telematics system provider (TSP) suddenly goes out of business
(have had two examples of this in 2018) any commercial fleet relying on
their service will need to find a new provider. Due to the lack of a
standardized telematics data format, a commercial fleet manager will
have to reintegrate an alternate telematics provider's data format into
their existing system reporting.

This is a standardized API for retrieving telematics logs & data.
Each participating TSP would be individually responsible for the necessary
translations from their existing formats to this Open Telematics
API. Each TSP would continue to be responsible for managing their
own cloud infrastructure housing customer data. The Open Telematics API, as an additional interface,
will be made available by TSPs to allow their customers ready
access to pull data in the standardized format, especially in examples
of mixed TSP fleets.

## Authentication

**All requests** to Open Telematics API endpoints **require authentication**.

For this version of the API, `v1`, all authentication must be performed using HTTP Basic. e.g.

```http
Authorization: Basic YWRtaW46YWRtaW4=
```

This authentication method relies entirely on the security protections provided by the TLS layer; therefore HTTPS is mandatory on all connections and implementors must follow adhere to the security requirements detailed in the *Security Requirements for Implementors* section below.

TSPs implementing the Open Telematics API must provide a means to create username-password pair credentials and these must be associated with roles (see section *Authorization* below).

## Authorization

TSPs implementing the Open Telematics API must include access controls for requests against the following roles.

* *Vehicle Sink*
* *Vehicle Return Sink*
* *Sink*
* *Return Sink*
* *Admin*

It must be possible for clients to usernames for Authentication (see above) which are assigned to **one role and no more than one role**.

TSPs implementing the Open Telematics API must restrict authorization of requests to only those roles that are assigned
in the **Access Controls** tables throughout this API specification. The tables will look like the following example:

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| `DENY/ALLOW` | `DENY/ALLOW` | `DENY/ALLOW` | `DENY/ALLOW` | `DENY/ALLOW` |

The intent of these access controls is so that carriers can limit which clients they deploy have access to:
* any resources at all
* any Personally Identifiable Information (PII)
* streaming feeds of new events as they are added to the TSP

As can be seen in the **Access Controls** tables in the requests subsections of *References* that follow, the roles
are assigned `DENY/ALLOW` such that:
* the *X Return Sink* roles have access to streaming feeds, whereas the *X Sink* roles have access only to collections
queries and
* the *Vehicle X* roles are intended to be safe from PII.

## Security Requirements for Implementors

All TSPs that implement an Open Telematics API instance are expected to
provide a secure service by default. In what follows we outline some
security requirements that are expected in addition to the authentication
and access control that is detailed in the sections above.

### General Security Requirements

Vendors must maintain a vulnerability response and disclosure program in
accordance with established standards such as International Organization
of Standards (ISO)/International Electrotechnical Commission (IEC)
29147:2014 (Information technology \-- Security techniques \--
Vulnerability Disclosure) and ISO/IEC 30111:2013 (Information technology
\-- Security techniques \-- Vulnerability Handling Processes).

Vendors should ensure their vulnerability response and disclosure
program conforms with the ['Legal bug bounty' safe-harbor requirements](https://github.com/EdOverflow/legal-bug-bounty)
to protect researchers and encourage the highest-quality participation.

### Open Telematics API Server Security Requirements

**TLS Configuration**
The TLS security for Open Telematics API servers is of paramount importance. All
of the confidentiality and integrity protections are relying on this layer. For this
reason, Open Telematics API servers must ensure that their HTTPS / TLS configurations
are of the highest quality. Following the [Qualys SSL Labs Guide](https://github.com/ssllabs/research/wiki/SSL-and-TLS-Deployment-Best-Practices) is reccomended.  The automated tool, also
by Qualys SSL Labs, at [https://www.ssllabs.com/ssltest/](https://www.ssllabs.com/ssltest/) will report a
'letter grade'; it is expected that TSPs will have letter grades of 'A' or higher according to that tool.

**Whitelist HTTP Methods**
This API specification (in *APIBlueprint*) has a complete list of all allowable *HTTP methods* for each resource/'end point'
of the Open Telematics API. Open Telematics server implementations should use the list of methods as a whitelist to filter incoming requests before any additional processing.

**Rate-limit API Requests**
Since every request to the Open Telematics API must be authenticated it is possible to rate-limit Open Telematics API requests per authenticated user. Vendors should implement rate limits on overall API requests per authenticated user, e.g. to avoid one user exhausting server resources of others; however, vendor must not rate-limit any Open Telematics API implementations to rates below what is offered through their other API services for telematics data.

### Open Telematics API Client Security Requirements

**Certificate Pinning**
Because the confidentiality of credentials is only protected by TLS in this version, it is
very important that all Open Telematics API clients must be configured such that substitution of
any TLS certificates results in a failure to establish any connections
to the Open Telematics API server.

All clients must implement certificate pinning. i.e. All client implementations will pass the tests, 5.4-5.6, for certificate pinning in the [OWASP MASVS](https://www.owasp.org/index.php/OWASP_Mobile_Security_Testing_Guide).

## Working With Dates

When exchanging dates as parameters to API methods or in responses from the API, you must ensure that
they are formatted properly as an ISO 8601 string (format
`yyyy-MM-ddTHH:mm:ss.fffZ`). In addition, all dates will have to first be
converted to UTC in order to ensure time zone information and daylight
savings times are accounted for correctly.

## Working With Locations

When exchanging locations as parameters to API methods or in responses from the API, you must ensure
that they are formatted as a latitude+longitude pair (format `[-]aaa.aaaaaaa [-]ooo.ooooooo`).

## Error States

The common [HTTP Response Status Codes](https://github.com/for-GET/know-your-http-well/blob/master/status-codes.md) are used.

# Group Duty Status Log

## Duty Status Log            [/api{version}/dutystatuslog/byid/{dutystatuslog_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + dutystatuslog_id: `C4CA4238A0B923820DCC509A6F75849B` (string) - ID of the Duty Status Log of interest

+ Attributes (object)
    + id                : `C4CA4238A0B923820DCC509A6F75849B` (required, string) - The unique identifier for the specific Entity object in the system.
    + annotations       : `C81E728D9D4C2F636F067F89CC14862C`, `ECCBC87E4B5CE2FE28308FD9F2A7BAF3` (array[string]) - The list of AnnotationLog(s) which are associated with this log.
    + coDrivers         : `A87FF679A2F3E71D9181A67B7542122C`, `E4DA3B7FBBCE2345D7772B0674A318D5` (array[string]) - The list of the co-driver User(s) for this log.
    + eldDateTime       :          `2019-01-0100:00:00.000Z` (required, string) - Date and time from the ELD device
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id associated with this log.
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this log.
    + distanceLastValid :                                117 (required, number) - The distance in whole miles traveled since the last valid latitude, longitude pair the ELD measured with required accuracy in the ELD mandate
    + editDateTime                                           (string) - The date and time the log was edited. If the log has not been edited, this will not be set.
    + eventRecordStatus :                                 1  (required, enum[number]) - The record status number of this log

        + Default: 1
        + Members
            + 1 - Active
            + 2 - Inactive -> Changed
            + 3 - Inactive -> Change Requested
            + 4 - Inactive -> Change Rejected

    + eventType         :                                  5 (required, enum[string]) - The event type number of this log. (Table 6; 7.25 of the ELD Final Rule)

        + Default: 5
        + Members
            + 1 - A change in driver's duty-status
            + 2 - An intermediate log
            + 3 - A change in driver's indication of authorized personal use of CMV or yard moves
            + 4 - A driver's certification/re-certification of records
            + 5 - A driver's login/logout activity
            + 6 - CMV's engine power up / shut down activity
            + 7 - A malfunction or data diagnostic detection

    + location          :         ` 37.4224764 -122.0842499` (required, string) - An object with the location information for the log data.
    + malfunction       :                             `None` (required, enum[string]) - The DutyStatusMalfunctionType of the DutyStatusLog record.

        + Default: `None`
        + Members
            + `Diagnostic` - In a diagnostic state.
            + `DiagnosticManualPosition` - Combination of ManualPosition and Diagnostic
            + `Malfunction` - In a malfunction state.
            + `MalfunctionManualPosition` - Combination of ManualPosition and Malfunction
            + `ManualPosition` - User has inputted a manual address for the log during a position compliance diagnostic event
            + `None` - No malfunction or diagnostic present or cleared.
            + `SystemDiagnosticClear` - System has determined that the diagnostic is cleared. Not exported to FMCSA.
            + `SystemDiagnosticClearDriving` - System has determined that the diagnostic is cleared and the vehicle was in motion. Used for PowerCompliance.
            + `UserDiagnosticClear` - User has cleared the diagnostic.
            + `UserMalfunctionClear` - User has cleared the malfunction.

    + origin            :                        `Automatic` (required, enum[string]) - The DutyStatusOrigin from where this log originated.

        + Default: `Automatic`
        + Members
            + `Automatic` - Automatic recorded by device
            + `Manual` - Manual entry by driver.
            + `OtherUser` - Other authenticated user.
            + `Unassigned` - Unassigned driver.

    + parentId          : `D6AB4B1A2E51C28CB32BFE8982D42259` (string) - The Id of the parent DutyStatusLog. Used when a DutyStatusLog is edited. When returning history, this field will be populated.
    + sequence          :                                 23 (required, number) - The sequence number, which is used to generate the sequence ID.
    + state             :                           `Active` (required, enum[string]) - The DutyStatusState of the DutyStatusLog record.

        + Default: `Active`
        + Members
            + `Active` - The log is active and has been accepted by the driver.
            + `Inactive` - The log is inactive. It has been removed or it is the modification history of a log.
            + `Rejected` - The log is a rejected edit request from another user.
            + `Requested` - The log is a pending edit request from another user.

    + status            :                                `D` (required, enum[string]) - The DutyStatusLogType representing the driver's duty status.

        + Default: `D`
        + Members
            + `AdverseWeather` - Adverse weather and driving conditions exemption.
            + `Authority` - Authority status.
            + `Certify` - Daily certify record.
            + `Connected` - System log for device power connection.
            + `D` - Drive status.
            + `DataRecordingCompliance` - Storage capacity is reached, or missing data elements exist. Applies to Malfunction or Diagnostic.
            + `DataTransferCompliance` - Transfer of data fails to complete. Applies to Malfunction or Diagnostic.
            + `Disconnected` - System log for device power disconnection.
            + `EnginePowerup` - Engine power up record.
            + `EnginePowerupPC` - Engine power up in PC record.
            + `EngineShutdown` - Engine shutdown record.
            + `EngineShutdownPC` - Engine shutdown in PC record.
            + `EngineSyncCompliance` - Occurs when engine information (power, motion, miles, and hours) cannot be obtained by ELD. Applies to Malfunction or Diagnostic.
            + `Exemption16H` - Exemption 16 hour.
            + `ExemptionOffDutyDeferral` - Exemption off duty deferral.
            + `INT_D` - Intermediate Drive Event.
            + `INT_PC` - Intermediate Personal Conveyance Event.
            + `Login` - User login record.
            + `Logoff` - User logout record.
            + `MissingElementCompliance` - Missing data elements. Applies to Malfunction or Diagnostic.
            + `OFF` - Off-duty status.
            + `ON` - On-duty status.
            + `OtherCompliance` - Other instances of Malfunction or Diagnostic.
            + `PC` - Personal conveyance driver status.
            + `PositioningCompliance` - ELD continually fails to acquire valid position measurement. Applies to Malfunction.
            + `PowerCompliance` - Engine power status engages ELD within 1 minute. Applies to Malfunction or Diagnostic.
            + `SB` - Sleeper berth status.
            + `SituationalDrivingClear` - YM, PC, or WT clearing event.
            + `TimingCompliance` - When ELD date and time exceeds 10 minute offset from UTC. Applies to Malfunction.
            + `UnidentifiedDrivingCompliance` - More than 30 minutes of driving with unidentified driving. Applies to Diagnostic.
            + `WT` - Wait time oil well driver status.
            + `YM` - Yard move driver status.

    + verifyDateTime                                         (string) - The date and time the log was verified. If the log is unverified, this will not be set. This is the same as log certification. This will be the last certification date.
    + fileDataCheck     : `164731747FC7236D799E588F60EFBBE7` (required, string) - A hexadecimal "check" value
    + lineDataCheck     : `9F7D0EE82B6A6CA7DDEAE841F3253059` (required, string) - A hexadecimal "check" value
    + multidayBasis     :                                  0 (required, number) - Multiday basis (7 or 8) used by the motor carrier to compute cumulative duty hours
    + outputFileComment : `fake Duty Status Log for testing` (required, string) - A textual field that may be populated with information pertaining to the creation of an ELD output file

### Get a Duty Status Log by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Duty Status Log)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Duty Status Log Collection [/api{version}/dutystatuslog/bydate{?start,stop}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start: `2019-01-0100:00:00.000Z` (string) - the start-date of the search
    + stop:  `2019-01-0100:00:00.000Z` (string) - the stop-date of the search

+ Attributes (object)
    + data (array[Duty Status Log], fixed-type)

### Search for all Duty Status Logs in a Time Range [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Duty Status Log Collection)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Duty Status Log Feed       [/api{version}/dutystatuslog/feed{?token}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Duty Status Logs; pass in a `null` to start with a new token set to 'now'.

+ Attributes (object)
    + token (string) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Duty Status Logs
    + feed (array[Duty Status Log], fixed-type)

### Follow a Feed of Duty Status Logs as they are Added to the System [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink | Return Sink | Admin |
|:-------------|---------------------|------|-------------|-------|
| DENY         | DENY                | DENY | ALLOW       | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Duty Status Log Feed)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Annotation Log

## Annotation Log [/api{version}/annotationlog/byid/{annotation_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + annotation_id: `C81E728D9D4C2F636F067F89CC14862C` (string) - ID of an annotation log object

+ Attributes (object)
    + id                : `C81E728D9D4C2F636F067F89CC14862C` (required, string) - The id of this Annotation Log object
    + driverId          : `63A9F0EA7BB98050796B649E85481845` (required, string) - The id of the driver who created this log.
    + comment           : `note: something noteworthy`       (required, string) - The annotation test associated with the log.
    + eldDateTime       :          `2019-01-0100:00:00.000Z` (required, string) - Date and time from the ELD device

### Get an Annotation Log by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Annotation Log)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Annotation Log Collection [/api{version}/annotationlog/bydate{?start,stop}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start: `2019-01-0100:00:00.000Z` (string) - the start-date of the search
    + stop:  `2019-01-0100:00:00.000Z` (string) - the stop-date of the search

+ Attributes (object)
    + data (array[Annotation Log], fixed-type)

### Search for all Annotation Logs in a Time Range [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Annotation Log Collection)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Annotation Log Feed       [/api{version}/annotationlog/feed{?token}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Duty Status Logs; pass in a `null` to start with a new token set to 'now'.

+ Attributes (object)
    + token (string) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Duty Status Logs
    + feed (array[Annotation Log], fixed-type)

### Follow a Feed of Annotation Logs as they are Added to the System [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink | Return Sink | Admin |
|:-------------|---------------------|------|-------------|-------|
| DENY         | DENY                | DENY | ALLOW       | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Annotation Log Feed)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Vehicle

## Vehicle [/api{version}/vehicle/byid/{vehicle_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicle_id: `21232F297A57A5A743894A0E4A801FC3` (string) - ID of a Vehicle object

+ Attributes (object)
    + id                : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The id of this Driver object
    + name                                                   (string) - Vehicle name
    + cmvVIN                                                 (required, string) - the CMV VIN
    + licensePlate                                           (required, string) - the vehicle license plate

### Get a Vehicle Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"


# Group Driver

## Driver [/api{version}/driver/byid/{driver_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + driver_id: `A87FF679A2F3E71D9181A67B7542122C` (string) - ID of a Driver object

+ Attributes (object)
    + id                : `A87FF679A2F3E71D9181A67B7542122C` (required, string) - The id of this Driver object
    + username                                               (string) - a username of this driver
    + driverLicenseNumber                                    (required, string) - the driver's license number
    + driverState                                            (string) - the home state of the driver
    + driverHomeTerminal                                     (string) - the home terminal of the driver

### Get a Driver Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Driver)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Trailer

## Trailer [/api{version}/trailer/byid/{trailer_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + trailer_id: `93707f725009f066ecf17dd8f6409a66` (string) - ID of a Trailer object

+ Attributes (object)
    + id                : `93707f725009f066ecf17dd8f6409a66` (required, string) - The id of this Trailer object
    + comment           : `Chris' second Wabco trailer`      (string) - Free text field where any user information can be stored and referenced for this entity.
    + name              : `chrisWabco2`                      (string) -  The name of the trailer.
    + trailerNum        : `5428`                             (required, string) -  Identifier(s) the motor carrier uses for the trailers in their normal course of business.
    + make              : `WABCO`                            (string) -  Manufacturer of the trailer
    + serialNumber      : `3020881703`                       (string) -  Serial number of the trailer

### Get a Driver Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Trailer)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Trailer Attachment Log

## Trailer Attachment Log [/api{version}/trailerattachmentlog/byid/{trailerattachmentlog_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + trailerattachmentlog_id: `915e375d95d78bf040a2e054caadfb56` (string) - ID of a Trailer object

+ Attributes (object)
    + id                : `915e375d95d78bf040a2e054caadfb56` (required, string) - The id of this Trailer Attachment Log object
    + activeFrom        :          `2019-01-0100:00:00.000Z` (required, string) - The date and time the Trailer was attached.
    + activeTo          :          `2019-01-0100:00:00.000Z` (required, string) - The date and time the Trailer was detached.
    + vehicleIdDevice   : `21232F297A57A5A743894A0E4A801FC3` (required, string) - The vehicle id with which the Trailer is associated with.
    + trailerIdTrailer  : `93707f725009f066ecf17dd8f6409a66` (required, string) - The attached Trailer id.

### Get a Trailer Attachment Log Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Trailer Attachment Log)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Trailer Attachment Log Collection [/api{version}/trailerattachmentlog/bydate{?start,stop}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start: `2019-01-0100:00:00.000Z` (string) - the start-date of the search
    + stop:  `2019-01-0100:00:00.000Z` (string) - the stop-date of the search

+ Attributes (object)
    + data (array[Trailer Attachment Log], fixed-type)

### Search for all Trailer Attachment Logs in a Time Range [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Trailer Attachment Log Collection)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Trailer Attachment Log Feed       [/api{version}/trailerattachmentlog/feed{?token}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Trailer Attachment Logs; pass in a `null` to start with a new token set to 'now'.

+ Attributes (object)
    + token (string) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Trailer Attachment
    + feed (array[Trailer Attachment Log], fixed-type)

### Follow a Feed of Trailer Attachment Logs as they are Added to the System [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink | Return Sink | Admin |
|:-------------|---------------------|------|-------------|-------|
| DENY         | DENY                | DENY | ALLOW       | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Trailer Attachment Log Feed)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Shipment Log

## Shipment Log [/api{version}/shipmentlog/byid/{shipmentlog_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + shipmentlog_id: `d498b81587f625b06571e7818a06befc` (string) - ID of a Shipment Log object

+ Attributes (object)
    + id                : `d498b81587f625b06571e7818a06befc` (required, string) - The id of this Shipment Log object
    + activeFrom        :          `2019-01-0100:00:00.000Z` (required, string) - The date the shipment was started
    + activeTo          :          `2019-01-0100:00:00.000Z` (required, string) - The date the shipment was ended
    + commodity         :                              15930 (number) - The commodity shipped using NMFC item numbers
    + dateTime          :          `2019-01-0100:00:00.000Z` (required, string) - The date and time the log was created.
    + vehicleId         : `21232F297A57A5A743894A0E4A801FC3` (string) - The vehicle id associated with this log.
    + documentNumber    :                            `00001` (string) - The identifier of the shipment document. Default [""]
    + driver            : `A87FF679A2F3E71D9181A67B7542122C` (string) - The User who created this log.
    + shipperName       :                      `Yellow Flag` (string) - The name of the shipper

### Get a Shipment Log Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Shipment Log)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Shipment Log Collection [/api{version}/shipmentlog/bydate{?start,stop}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start: `2019-01-0100:00:00.000Z` (string) - the start-date of the search
    + stop:  `2019-01-0100:00:00.000Z` (string) - the stop-date of the search

+ Attributes (object)
    + data (array[Shipment Log], fixed-type)

### Search for all Shipment Logs in a Time Range [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Shipment Log Collection)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Shipment Log Feed       [/api{version}/shipmentlog/feed{?token}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Shipment Logs; pass in a `null` to start with a new token set to 'now'.

+ Attributes (object)
    + token (string) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Shipment Log
    + feed (array[Shipment Log], fixed-type)

### Follow a Feed of Shipment Logs as they are Added to the System [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink | Return Sink | Admin |
|:-------------|---------------------|------|-------------|-------|
| DENY         | DENY                | DENY | ALLOW       | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Shipment Log Feed)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group Vehicle Event

## Vehicle Event [/api{version}/vehicleevent/byid/{vehicleevent_id}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + vehicleevent_id: `4119639092e62c55ea8be348e4d9260d` (string) - ID of a Vehicle Event object

+ Attributes (object)
    + id                : `4119639092e62c55ea8be348e4d9260d` (required, string) - The id of this Vehicle Event object
    + cmvVIN              string    Vehicle ID [J1939 SPN 237]
    + eventComment      : `event type XXXX, (other details)` (string) - a free-form comment field. Can be used for e.g. identifying the type of event or other unstructured data
    + odometer                                               (number) object Odometer reading at time of event [J1939 SPN 245]
    + eventStart        :          `2019-01-0100:00:00.000Z` (required, string) - Date and time of the start of the event
    + eventEnd          :          `2019-01-0100:00:00.000Z` (required, string) - Date and time of the end of the event
    + faultCode                                              (string) - Fault Code (if applicable) [J1939 DM1]
    + RPM                                                    (string) - RPM reading at time of event [J1939 SPN 190]
    + seatBelts         :                               true (boolean) -  Were seat belts engaged at time of event
    + cruiseControl     :                               true (boolean) -  Was cruise control engage at time of event [J1939 PGN 65265]

### Get a Vehicle Event Object by its ID [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Event)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Event Collection [/api{version}/vehicleevent/bydate{?start,stop}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + start: `2019-01-0100:00:00.000Z` (string) - the start-date of the search
    + stop:  `2019-01-0100:00:00.000Z` (string) - the stop-date of the search

+ Attributes (object)
    + data (array[Vehicle Event], fixed-type)

### Search for all Vehicle Events in a Time Range [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink  | Return Sink | Admin |
|:-------------|---------------------|-------|-------------|-------|
| DENY         | DENY                | ALLOW | DENY        | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Event Collection)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

## Vehicle Event Feed       [/api{version}/vehicleevent/feed{?token}]

+ Parameters
    + version: `v1` (enum[string]) - API version
        + Members
            + `v1`
    + token: `37A6259CC0C1DAE299A7866489DFF0BD` (string, optional) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Vehicle Events; pass in a `null` to start with a new token set to 'now'.

+ Attributes (object)
    + token (string) - a since-token, pass-in the token previously returned by `feed` to 'follow' new Vehicle Event
    + feed (array[Vehicle Event], fixed-type)

### Follow a Feed of Vehicle Events as they are Added to the System [GET]

**Access Controls**

| Vehicle Sink | Vehicle Return Sink | Sink | Return Sink | Admin |
|:-------------|---------------------|------|-------------|-------|
| DENY         | DENY                | DENY | ALLOW       | ALLOW |

+ Request
    + Headers

            Authorization: Basic YWRtaW46YWRtaW4=

+ Response 200 (application/json)
    + Attributes (Vehicle Event Feed)

+ Response 401
    + Headers

            WWW-Authenticate: Basic realm="protected"

# Group More To Come
